import React, { useState, useEffect } from 'react';

function PaginationExample({ data, itemsPerPage }) {
  const [currentPage, setCurrentPage] = useState(1);

  const indexOfLastItem = currentPage * itemsPerPage;
  const indexOfFirstItem = indexOfLastItem - itemsPerPage;
  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);

  const nextPage = () => setCurrentPage(currentPage + 1);
  const prevPage = () => setCurrentPage(currentPage - 1);

  return (
    <div>
      <ul>
        {currentItems.map((item) => (
          <li key={item.id}>{item.title}</li>
        ))}
      </ul>
      <div>
        <button onClick={prevPage} disabled={currentPage === 1}>
          Previous
        </button>
        {Array.from(
          { length: Math.ceil(data.length / itemsPerPage) },
          (_, index) => (
            <button key={index} onClick={() => setCurrentPage(index + 1)}>
              {index + 1}
            </button>
          )
        )}
        <button
          onClick={nextPage}
          disabled={currentPage === Math.ceil(data.length / itemsPerPage)}
        >
          Next
        </button>
      </div>
    </div>
  );
}

function App() {
  const [data, setData] = useState([]);
  const itemsPerPage = 10;
  const callApe = async () => {
    try {
      fetch('https://jsonplaceholder.typicode.com/posts')
        .then((res) => res.json())
        .then((rs) => setData(rs));
    } catch (err) {
      console.log(err);
    }
  };
  useEffect(() => {
    callApe();
  }, []);
  return (
    <div>
      <h1>Pagination Example</h1>
      <PaginationExample data={data} itemsPerPage={itemsPerPage} />
    </div>
  );
}

export default App;
