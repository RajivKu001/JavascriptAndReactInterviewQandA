
export default function App() {
  const arr = [23, 21, [32, [[14]], 55, [16]], 67, 80];

  function myFn(data) {
    let flatren = [];
    data.forEach((element) => {
      if (Array.isArray(element)) {
        flatren = flatren.concat(myFn(element));
      } else {
        flatren.push(element);
      }
    });
    return flatren;
  }

  console.log(myFn(arr));

  function flattenArrayWithDepth(arr, maxDepth) {
    let flattened = [];

    function flatten(innerArr, currentDepth) {
      innerArr.forEach(function (element) {
        if (Array.isArray(element) && currentDepth < maxDepth) {
          flatten(element, currentDepth + 1);
        } else {
          flattened.push(element);
        }
      });
    }

    flatten(arr, 1);
    return flattened;
  }

  // Example usage with maximum depth 2:
  let nestedArray = [1, [2, [3, 4], 5], [6, [7, 8]]];
  let flatArray = flattenArrayWithDepth(nestedArray, 2);
  console.log(flatArray); // Output: [1, 2, 3, 4, 5, 6, [7, 8]]


  return (
    <div className="App">
      <h1>flatArrayUsingForEach</h1>
    </div>
  );
}
