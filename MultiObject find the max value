const data = [
  {
    ram: 11,
    rama: 5,
    ramaa: 8,
    ramaaa: 9
  },
  {
    ram: 115,
    syam: 55,
    radha: 85,
    krishn: 95
  },
  {
    gopi: 50,
    lakshaman: 50,
    hari: 80,
    harikrishna: 90
  },
  {
    syamana: 112,
    rama: 52,
    krishna: 83,
    kanehya: 94
  }
];

const { key: maxKey, value: maxValue } = data.reduce(
  (acc, obj) => {
    const [key, value] = Object.entries(obj).reduce(
      (innerAcc, [innerKey, innerValue]) => {
        return innerValue > innerAcc[1] ? [innerKey, innerValue] : innerAcc;
      },
      ["", -Infinity]
    );

    return value > acc.value ? { key, value } : acc;
  },
  { key: "", value: -Infinity }
);

console.log("The maximum value is:", maxValue);
console.log("The corresponding key is:", maxKey);

  const redData = data.reduce((acc, curr) => {
    const arr = Object.entries(curr).map((item) => item);
    return {...acc, ...Object.fromEntries(arr)}
  },{})

  // let maxValue = -Infinity;
  // let maxKey = null;
  // for(let [key,value] of Object.entries(redData)){
  //   if(value > maxValue){
  //     maxValue = value;
  //     maxKey = key
  //   }
  // }
  // console.log(maxValue, maxKey);

// Using foreach
// let maxKey = "";
// let maxValue = Number.NEGATIVE_INFINITY;

// data.forEach(obj => {
//   for (const key in obj) {
//     if (obj.hasOwnProperty(key)) {
//       const value = obj[key];
//       if (value > maxValue) {
//         maxValue = value;
//         maxKey = key;
//       }
//     }
//   }
// });

// console.log("The maximum value is:", maxValue);
// console.log("The corresponding key is:", maxKey);

